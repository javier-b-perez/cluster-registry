# Build clusterregistry container using Google Cloud Container Builder
# and push it to your Google Container Registry.
#
# The image can be built automatically for every change on the code using
# https://cloud.google.com/container-builder/docs/how-to/build-triggers
#
# To run in Google Cloud Container Builder:
# $ gcloud container builds submit --config cloudbuild.yaml .
#
# To run in Container Builder locally:
# install local builder:
#  https://github.com/GoogleCloudPlatform/container-builder-local
#
# $ container-builder-local --dryrun=false \
#    --config cloudbuild.yaml .
timeout: 10800s

steps:
# Build and tag clusterregistry image. Image will be tag as 'latest'
- name: 'gcr.io/cloud-builders/bazel'
  args: ['build', '//cmd/clusterregistry:clusterregistry-image.tar']

- name: 'gcr.io/cloud-builders/docker'
  args: ['load', '-i', 'bazel-bin/cmd/clusterregistry/clusterregistry-image.tar']

- name: 'gcr.io/cloud-builders/docker'
  args: ['tag', 'bazel/cmd/clusterregistry:clusterregistry-image', 'gcr.io/$PROJECT_ID/clusterregistry']

# Build and release to Cloud Storage the command-line tool
- name: 'gcr.io/cloud-builders/bazel'
  args: ['build', '//cmd/crinit']

- name: 'gcr.io/cloud-builders/gsutil'
  args: ['cp', 'bazel-bin/cmd/crinit/crinit', 'gs://$PROJECT_ID/crinit/$BUILD_ID/']

# Push image to registry
images: ['gcr.io/$PROJECT_ID/clusterregistry']
